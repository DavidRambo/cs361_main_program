* Main Program for CS 361
** Sprint Backlog [3/6]
*** DONE User story 5: View gift information
As a logged-in user viewing someone's wish list, I can select a gift for more information.

Functional requirements:
- Given a user is viewing a wish list with at least one item, they can choose to view additional details entered for that item. If there are no additional details about an item, then the user will not have the option to view nonexistent information.

Quality attributes and non-functional requirements:
- Learnability: The part of the interface that provides access to an item's additional details is labeled accordingly (e.g. a link that reads "More details" or a button with a "+" icon). It should also be visually associated with a single item. Additional details are not shown by default so that the wish list may be presented without clutter. If there are no additional details about an item, then this should be apparent to the user through a visual cue and wording, and the option to view more details should be unavailable.
*** DONE User story 9: View one's own wish list
As a logged-in user, I can view my wish list separately from others users' lists so that I do not see whether gifts have been marked.

Functional requirements:
- Given an authenticated user, when they select the option to view their own wish list, then they will be taken to a specific view of their wish list.

Quality attributes and non-functional requirements:
- Learnability: The user may intuitively distinguish between their own wish list and those of other users'.
- Securability: The user's wish list does not indicate whether other users have marked gifts as what they intend to give. Only this user may view their own wish list from this view, since it will eventually provide the capability to be edited.
*** DONE User story 10: Edit one's own wish list
As a logged-in user, I can edit my wish list to have gift ideas so that other users will see what I hope to receive.

Functional requirements:
Given an authenticated user, when they are viewing their own wish list, they may add a new item to it or edit the details of an existing item.

Quality attributes and non-functional requirements:
- Learnability: Options to add to or edit one's personal wish list are labeled as such. When editing an item, the text fields are labeled and prefilled with the existing data. The user has the option to cancel any changes they are in the process of making.
- Serviceability: A user may update their wish list entirely through the web app, such that the site maintainer does not need to assist with the manipulation of a user's wish list.
*** DONE User story 3: Select wish list
As a logged-in user, I can see other group member's names so that I can select whose wish list I want to view.

Functional requirements:
- Given an authenticated user is viewing the list of names on the landing page, when they select a name, then they should be shown that person's wish list.

Quality attributes and non-functional requirements:
- Learnability: It should be clear to the user that they are being given a list of their group members' names in order to view their wish lists.
- Securability: The user should see listed only other users' names and not their own.
*** DONE User story 6: Mark gift as taken
As a logged-in user viewing someone's wish list, I can mark a gift as having been taken so that no one else may do so.
*** DONE User story 7: Unmark gift as no longer taken
As a logged-in user viewing someone's wish list with a gift I have marked as taken, I can unmark that gift so that it may be selected by someone else.
*** DONE User story 8: Unable to unmark gift another user has selected
As a logged-in user viewing someone's wish list with a gift I have not marked as taken, I cannot unmark that gift so that other users' decisions are maintained.
** Product Backlog
*** TODO User story 1: Register
As a new user, I can use a special code to register so that I can join a gift-giving group.
*** TODO User story 2: Login
As a new user, I can log in with my username and password so that I can use the app.

Functional requirements:
- Given a user is registered and at the login page, when they enter their username and password, then they will be sent to the landing page.

Quality attributes and non-functional requirements:
- Securability: The user can only interact with their groupâ€™s wish lists and edit their own once they have logged in.
- Serviceability: The web app's administrator can easily provision a user with a username and password.
*** TODO User story 11: Logout
*** TODO User story 4: View all the gifts I have committed to get
As a logged-in user, I can view a list of all the gifts I have marked on others' wish lists so that I can be sure to get them.
*** TODO User story 12: Upload CSV of wish list
*** TODO User story 13: Confirm items parsed by CSV importer
*** TODO User story 14: Download CSV of wish list
